{"version":3,"sources":["webpack://dev-ryan-portfolio/./src/constants/projectMappings.ts","webpack://dev-ryan-portfolio/./src/components/ProjectCard/projectCard.tsx","webpack://dev-ryan-portfolio/./src/components/projectsPage/topProjects.tsx","webpack://dev-ryan-portfolio/./src/pages/projects.tsx"],"names":["projectMappings","name","description","base","displayTags","hiddenTags","github","demo","isPronounced","image","projectInfo","find","e","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","className","style","transform","margin","href","target","G","key","getImage","alt","width","height","join","props","images","useStaticQuery","allFile","nodes","map","index","childImageSharp","title"],"mappings":"gOAWaA,EAAuC,CACnD,CACCC,KAAM,oBACNC,YAAY,iKACZC,KAAM,6BACNC,YAAa,CAAC,QAAS,UAAW,aAClCC,WAAY,CAAC,QAAS,QAAS,QAC/BC,OAAQ,uDACRC,KAAM,wCAEP,CACCN,KAAM,oBACNC,YAAY,uLACZC,KAAM,4BACNC,YAAa,CAAC,QAAS,SAAU,SACjCC,WAAY,CACX,SACA,QACA,QACA,QACA,QACA,eACA,SACA,cAEDC,OAAQ,sCACRE,cAAc,GAEf,CACCP,KAAM,gBACNC,YAAY,oLACZC,KAAM,oBACNC,YAAa,CAAC,QAAS,UAAW,aAClCC,WAAY,CAAC,QAAS,QACtBC,OAAQ,8CACRC,KAAM,iD,UCsCR,EAtEqC,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,MAAON,EAAkB,EAAlBA,KAC1CO,EAA4BV,EAAgBW,MAC/C,SAACC,GAAD,OAAOA,EAAET,OAASA,KAGbU,GAAoBC,mBAAc,CAAEC,eAAgB,OAE1D,OACC,uBACCC,UAAU,iBACVC,MACCP,EAAYF,cAAgBK,EACzB,CACAK,UAAW,aACXC,OAAQ,QAER,IAEJ,uBAAKH,UAAU,cACd,qBAAGI,KAAMV,EAAYJ,OAAQe,OAAO,UACnC,gBAAC,EAAAC,EAAD,CACCC,IAAKb,EAAYR,YACjBO,OAAOe,OAASf,GAChBgB,IAAKf,EAAYR,YACjBe,MAAO,CACNS,MAAO,OACPC,OAAQ,YAKZ,uBAAKX,UAAU,aACd,uBAAKA,UAAU,wBACd,sBAAIA,UAAU,cAAcN,EAAYT,MACxC,sBAAIe,UAAU,aACZN,EAAYN,YAAYwB,KAAK,OAGhC,uBAAKZ,UAAU,8BACd,qBAAGA,UAAU,oBACXN,EAAYR,cAGf,uBAAKc,UAAU,yBACd,qBAAGA,UAAU,qBAAb,SAEC,qBACCA,UAAU,gBACVI,KAAMV,EAAYJ,OAClBe,OAAO,UAHR,UAMCX,EAAYH,MACZ,oCAEC,qBACCS,UAAU,gBACVI,KAAMV,EAAYH,KAClBc,OAAO,UAHR,cChBR,EAlCqC,SAACQ,GACrC,IAmBMC,GAnB0BC,oBAAe,cAmBZC,QAAQC,MAAMC,KAChD,SAACtB,EAAwDuB,GACxD,OACC,gBAAC,EAAD,CACC1B,OAAOe,OAASZ,EAAEwB,iBACHjC,KAAMS,EAAET,KACRoB,IAAKX,EAAET,UAK1B,OAAO,uBAAKa,UAAU,0BAA0Bc,ICrBjD,EAdkC,WACjC,OACC,gBAAC,IAAD,KACC,gBAAC,IAAD,CAAKO,MAAM,aACX,uBAAKrB,UAAU,2BACd,uBAAKA,UAAU,2BACd,sBAAIA,UAAU,mBAAd,sBAED,gBAAC,EAAD","file":"component---src-pages-projects-tsx-50a32250d24bba181401.js","sourcesContent":["export interface IProjectInfo {\r\n\tname: string;\r\n\tdescription: string;\r\n\tbase: string;\r\n\tdisplayTags: Array<string>;\r\n\thiddenTags: Array<string>;\r\n\tgithub: string;\r\n\tdemo?: string;\r\n\tisPronounced?: boolean;\r\n}\r\n\r\nexport const projectMappings: Array<IProjectInfo> = [\r\n\t{\r\n\t\tname: 'Losing The Lyrics',\r\n\t\tdescription: `A web based jackbox style game inspired by the 2007 tv show 'Don't Forget The Lyrics'. Powered by React with Next.js, Socket.io, and Spotify Web Playback SDK.`,\r\n\t\tbase: 'losing-the-lyrics-proj.png',\r\n\t\tdisplayTags: ['React', 'Next.js', 'Socket.io'],\r\n\t\thiddenTags: ['react', 'redux', 'node'],\r\n\t\tgithub: 'https://github.com/RyanCallahan312/losing-the-lyrics',\r\n\t\tdemo: 'http://losing-the-lyrics.devryan.io/',\r\n\t},\r\n\t{\r\n\t\tname: 'Highlight-intator',\r\n\t\tdescription: `A web app to automatically create short highlight videos from Twitch live stream vods. Targeted at small streamers to help grow thier audience. (demo disabled due to hosting costs)`,\r\n\t\tbase: 'highlight-inator-proj.png',\r\n\t\tdisplayTags: ['.NET5', 'FFMPEG', 'React'],\r\n\t\thiddenTags: [\r\n\t\t\t'dotnet',\r\n\t\t\t'react',\r\n\t\t\t'redux',\r\n\t\t\t'linux',\r\n\t\t\t'azure',\r\n\t\t\t'microservice',\r\n\t\t\t'docker',\r\n\t\t\t'postgresql',\r\n\t\t],\r\n\t\tgithub: 'https://github.com/auto-highlighter',\r\n\t\tisPronounced: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Chat App Demo',\r\n\t\tdescription: `A chat app designed as a code-along for a 40 minute computer science club demo. Powered by React with Next.js and Socket.io this lets anyone send messages to a global chat room!`,\r\n\t\tbase: 'chat-app-proj.png',\r\n\t\tdisplayTags: ['React', 'Next.js', 'Socket.io'],\r\n\t\thiddenTags: ['react', 'node'],\r\n\t\tgithub: 'https://github.com/RyanCallahan312/chat-app',\r\n\t\tdemo: 'http://chat-room.bsucomputerscienceclub.com/',\r\n\t},\r\n];\r\n","import * as React from 'react';\r\nimport { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { IProjectInfo, projectMappings } from '@constants/projectMappings';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Icons } from '@types';\r\n\r\nimport '@styles/projectCard.css';\r\n\r\ninterface Props {\r\n\timage: IGatsbyImageData;\r\n\tbase: string;\r\n}\r\n\r\nconst ProjectCard: React.FC<Props> = ({ image, base }: Props) => {\r\n\tlet projectInfo: IProjectInfo = projectMappings.find(\r\n\t\t(e) => e.base === base,\r\n\t);\r\n\r\n\tconst isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1424 });\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='card-container'\r\n\t\t\tstyle={\r\n\t\t\t\tprojectInfo.isPronounced && isDesktopOrLaptop\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\ttransform: 'scale(1.1)',\r\n\t\t\t\t\t\t\tmargin: '20px',\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: {}\r\n\t\t\t}>\r\n\t\t\t<div className='card-image'>\r\n\t\t\t\t<a href={projectInfo.github} target='_blank'>\r\n\t\t\t\t\t<GatsbyImage\r\n\t\t\t\t\t\tkey={projectInfo.description}\r\n\t\t\t\t\t\timage={getImage(image)}\r\n\t\t\t\t\t\talt={projectInfo.description}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div className='card-text'>\r\n\t\t\t\t<div className='card-title-with-tags'>\r\n\t\t\t\t\t<h1 className='card-title'>{projectInfo.name}</h1>\r\n\t\t\t\t\t<h1 className='card-tags'>\r\n\t\t\t\t\t\t{projectInfo.displayTags.join(',')}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='card-description-container'>\r\n\t\t\t\t\t<p className='card-description'>\r\n\t\t\t\t\t\t{projectInfo.description}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='demo-github-container'>\r\n\t\t\t\t\t<p className='demo-github-links'>\r\n\t\t\t\t\t\tLinks:\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tclassName='git-demo-link'\r\n\t\t\t\t\t\t\thref={projectInfo.github}\r\n\t\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\t\tGithub\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t{projectInfo.demo && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tclassName='git-demo-link'\r\n\t\t\t\t\t\t\t\t\thref={projectInfo.demo}\r\n\t\t\t\t\t\t\t\t\ttarget='_blank'>\r\n\t\t\t\t\t\t\t\t\tDemo\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProjectCard;\r\n","import * as React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { getImage, IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport ProjectCard from '@components/ProjectCard/projectCard';\r\n\r\nimport {Icons} from '@types'\r\nimport '@styles/topProjects.css';\r\n\r\ninterface TopProjectsImages {\r\n\tallFile: {\r\n\t\tnodes: [{ childImageSharp: IGatsbyImageData; base: string }];\r\n\t};\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\n\r\nconst TopProjects: React.FC<Props> = (props: Props) => {\r\n\tconst data: TopProjectsImages = useStaticQuery(graphql`\r\n    {\r\n        allFile(\r\n        filter: {relativeDirectory: {eq: \"projects\"}, base: {in: [\"chat-app-proj.png\", \"highlight-inator-proj.png\", \"losing-the-lyrics-proj.png\"]}}\r\n        sort: {fields: base}\r\n        ) {\r\n            nodes {\r\n                childImageSharp {\r\n                    gatsbyImageData(\r\n                        placeholder: BLURRED\r\n                        formats: [AUTO, WEBP, AVIF]\r\n                    )\r\n                }\r\n                base\r\n            }\r\n        }\r\n    }\r\n    `);\r\n\r\n\tconst images: JSX.Element[] = data.allFile.nodes.map(\r\n\t\t(e: { childImageSharp: IGatsbyImageData; base: string }, index: number) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ProjectCard\r\n\t\t\t\t\timage={getImage(e.childImageSharp)}\r\n                    base={e.base}\r\n                    key={e.base}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t},\r\n\t);\r\n\treturn <div className='top-projects-container'>{images}</div>;\r\n};\r\n\r\nexport default TopProjects;\r\n","import * as React from 'react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Layout from '@components/common/defaultLayout';\r\nimport SEO from '@components/common/seo';\r\nimport TopProjects from '@components/projectsPage/topProjects';\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport '@styles/projects.css';\r\ninterface TopProjectsImages {\r\n\tallFile: {\r\n\t\tnodes: [{ childImageSharp: IGatsbyImageData; publicUrl: string }];\r\n\t};\r\n}\r\ninterface Props{\r\n}\r\nconst Projects: React.FC<Props> = () => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<SEO title='Projects' />\r\n\t\t\t<div className='headline-grid-container'>\r\n\t\t\t\t<div className='headline-text-container'>\r\n\t\t\t\t\t<h1 className='projects-header'>Featured Projects</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<TopProjects/>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default Projects;\r\n"],"sourceRoot":""}